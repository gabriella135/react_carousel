{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","useState","translate","setTranslate","step","setStep","frameSize","setFrameSize","itemWidth","setItemWidth","animationDuration","setAnimationDuration","styleVisibleCarousel","transform","transition","styleCarousel","width","styleCarouselImage","carouselLength","length","maxTranslateRight","className","htmlFor","id","type","value","onChange","event","currentTarget","min","max","placeholder","style","map","image","index","src","alt","toString","onClick","newTranslate","handlePrevImage","classNames","handleNextImage","App","state","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gRAmJeA,EA3ImB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnC,EAAkCC,mBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwBF,mBAAS,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAkCJ,mBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAkCN,mBAAS,KAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAkDR,mBAAS,KAA3D,mBAAOS,EAAP,KAA0BC,EAA1B,KAEMC,EAAuB,CAC3BC,UAAU,cAAD,OAAgBX,EAAhB,OACTY,WAAW,aAAD,OAAeJ,EAAf,OAGNK,EAAgB,CACpBC,MAAM,GAAD,OAAKR,EAAYF,EAAjB,OAGDW,EAAqB,CACzBD,MAAM,GAAD,OAAKR,EAAL,OAGDU,EAAiBlB,EAAOmB,OAASX,EACjCY,EAAuCZ,EAAYF,EAA9BY,EAsB3B,OACE,sBAAKG,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,uBAAOC,QAAQ,SAAf,kCACA,uBACEC,GAAG,SACHC,KAAK,SACLC,MAAOjB,EACPkB,SAAU,SAACC,GAAD,OAAWtB,GAASsB,EAAMC,cAAcH,UAGpD,uBAAOH,QAAQ,UAAf,4BACA,uBACEC,GAAG,UACHC,KAAK,SACLC,MAAOnB,EACPoB,SAAU,SAACC,GAAD,OAAWpB,GAAcoB,EAAMC,cAAcH,QACvDI,IAAK,EACLC,IAAK9B,EAAOmB,SAGd,uBAAOG,QAAQ,SAAf,6BACA,uBACEC,GAAG,SACHC,KAAK,SACLC,MAAOrB,EACPsB,SAAU,SAACC,GAAD,OAAWlB,GAAckB,EAAMC,cAAcH,QACvDM,YAAY,gCACZF,IAAK,EACLC,IAAK9B,EAAOmB,SAGd,uBAAOG,QAAQ,oBAAf,yCAGA,uBACEC,GAAG,oBACHC,KAAK,SACLC,MAAOf,EACPgB,SAAU,SAACC,GAAD,OAAWhB,GAAsBgB,EAAMC,cAAcH,QAC/DM,YAAY,6CAIhB,oBACEV,UAAU,iBACVW,MAAOjB,EAFT,SAIE,qBACEM,UAAU,wBACVW,MAAOpB,EAFT,SAIGZ,EAAOiC,KAAI,SAACC,EAAeC,GAAhB,OACV,6BACE,qBACEC,IAAKF,EACLG,KAAMF,EAAQ,GAAGG,WACjBN,MAAOf,KAJFiB,UAWf,sBAAKb,UAAU,oBAAf,UACE,wBACEG,KAAK,SACLe,QAAS,kBA7EjB,WACE,IAAMC,EAAetC,EAAaM,EAAYJ,EAG5CD,EADEqC,GAAgB,EACLA,EAEA,GAuEMC,IACfpB,UAAWqB,IACT,mBACA,CACE,6BAA4C,IAAdxC,IANpC,kBAaA,wBACEsB,KAAK,SACLe,QAAS,kBApGjB,WACE,IAAMC,EAAetC,EAAaM,EAAYJ,EAG5CD,EADEqC,EAAepB,EACJoB,EAEApB,GA8FMuB,IACftB,UAAWqB,IACT,mBACA,CACE,6BAA8BxC,IAAckB,IAGhD,UAAQ,OATV,yBCzHFwB,E,4MACJC,MAAQ,CACN7C,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,iB,4CAIJ,WACE,IAAQA,EAAW8C,KAAKD,MAAhB7C,OAER,OACE,sBAAKqB,UAAU,MAAf,UAEE,qBAAI,UAAQ,QAAZ,0BAEG,IACArB,EAAOmB,OACP,IAJH,YAOA,cAAC,EAAD,CAAUnB,OAAQA,W,GA7BR+C,IAAMC,WAmCTJ,ICxCfK,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.116251a7.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n};\n\nconst Carousel: React.FC<Props> = ({ images }) => {\n  const [translate, setTranslate] = useState(0);\n  const [step, setStep] = useState(3);\n  const [frameSize, setFrameSize] = useState(3);\n  const [itemWidth, setItemWidth] = useState(130);\n  const [animationDuration, setAnimationDuration] = useState(1000);\n\n  const styleVisibleCarousel = {\n    transform: `translateX(${translate}px)`,\n    transition: `transform ${animationDuration}ms`,\n  };\n\n  const styleCarousel = {\n    width: `${itemWidth * frameSize}px`,\n  };\n\n  const styleCarouselImage = {\n    width: `${itemWidth}px`,\n  };\n\n  const carouselLength = images.length * itemWidth;\n  const maxTranslateRight = -carouselLength + (itemWidth * frameSize);\n\n  function handleNextImage() {\n    const newTranslate = translate - (itemWidth * step);\n\n    if (newTranslate > maxTranslateRight) {\n      setTranslate(newTranslate);\n    } else {\n      setTranslate(maxTranslateRight);\n    }\n  }\n\n  function handlePrevImage() {\n    const newTranslate = translate + (itemWidth * step);\n\n    if (newTranslate <= 0) {\n      setTranslate(newTranslate);\n    } else {\n      setTranslate(0);\n    }\n  }\n\n  return (\n    <div className=\"Carousel\">\n      <div className=\"Carousel__inputs\">\n        <label htmlFor=\"itemId\">Width of image (px):</label>\n        <input\n          id=\"itemId\"\n          type=\"number\"\n          value={itemWidth}\n          onChange={(event) => setStep(+event.currentTarget.value)}\n        />\n\n        <label htmlFor=\"frameId\">Size of frame:</label>\n        <input\n          id=\"frameId\"\n          type=\"number\"\n          value={frameSize}\n          onChange={(event) => setFrameSize(+event.currentTarget.value)}\n          min={1}\n          max={images.length}\n        />\n\n        <label htmlFor=\"stepId\">Step of scroll:</label>\n        <input\n          id=\"stepId\"\n          type=\"number\"\n          value={step}\n          onChange={(event) => setItemWidth(+event.currentTarget.value)}\n          placeholder=\"Write a size of image here...\"\n          min={1}\n          max={images.length}\n        />\n\n        <label htmlFor=\"animationDuration\">\n          Duration of animation (ms):\n        </label>\n        <input\n          id=\"animationDuration\"\n          type=\"number\"\n          value={animationDuration}\n          onChange={(event) => setAnimationDuration(+event.currentTarget.value)}\n          placeholder=\"Write a duration of animation here...\"\n        />\n      </div>\n\n      <ul\n        className=\"Carousel__list\"\n        style={styleCarousel}\n      >\n        <div\n          className=\"Carousel__visibleList\"\n          style={styleVisibleCarousel}\n        >\n          {images.map((image: string, index: number) => (\n            <li key={image}>\n              <img\n                src={image}\n                alt={(index + 1).toString()}\n                style={styleCarouselImage}\n              />\n            </li>\n          ))}\n        </div>\n      </ul>\n\n      <div className=\"Carousel__buttons\">\n        <button\n          type=\"button\"\n          onClick={() => handlePrevImage()}\n          className={classNames(\n            'Carousel__button',\n            {\n              'Carousel__button--disabled': translate === 0,\n            },\n          )}\n        >\n          Prev\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => handleNextImage()}\n          className={classNames(\n            'Carousel__button',\n            {\n              'Carousel__button--disabled': translate === maxTranslateRight,\n            },\n          )}\n          data-cy=\"next\"\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">\n          Carousel with\n          {' '}\n          {images.length}\n          {' '}\n          images\n        </h1>\n        <Carousel images={images} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}